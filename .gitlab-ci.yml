image: node:13
cache:
  untracked: false
  key: "$CI_BUILD_REF_NAME"
  paths:
    - dist/
variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  #IMAGE_TAG: adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA}

stages:
  - test
  - build
  - docker
  - deploy

before_script:
  - printenv
  - export CAL_VER=$(date +"%y%m%d%H")

test:
  stage: test
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 hr
  script:
    - npm uninstall -g @angular/cli angular-cli
    - npm install -g @angular/cli@8.3.1
    - rm -rf node_modules
    - npm install
  before_script:
    - ls -ltr

build-develop:
  environment:
    name: develop
  stage: build
  artifacts:
    paths:
      - dist/
    expire_in: 1 hr
  script:
    - npm install -g @angular/cli@8.3.1
    - ./node_modules/@angular/cli/bin/ng build --configuration=develop
  only:
   - develop
   - /^develop_[0-9]+(?:.[0-9]+)+$/
   
build-stage:
  environment:
    name: staging
  stage: build
  artifacts:
    paths:
      - dist/
    expire_in: 1 hr
  script:
    - npm install -g @angular/cli@8.3.1
    - ./node_modules/@angular/cli/bin/ng build --configuration=staging 
  only:
   - feature-ci-cd
   - staging
   - /^staging_[0-9]+(?:.[0-9]+)+$/

build-prod:
  environment:
    name: production
  stage: build
  artifacts:
    paths:
      - dist/
    expire_in: 1 hr
  script:
    - npm install -g @angular/cli@8.3.1
    - ./node_modules/@angular/cli/bin/ng build --configuration=production 
  only:
   - master
   - /^v[0-9]+(?:.[0-9]+)+$/

build_docker_image-develop:
  stage: docker
  image: docker:19
  script:
    - pwd
    - ls -ltra ./dist/
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
    - cp ./docker/Dockerfile ./
    - docker build --no-cache -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER} .
    - docker push                ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
    - docker rmi                 ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
  only:
   - develop
   - /^develop_[0-9]+(?:.[0-9]+)+$/

build_docker_image-staging:
  stage: docker
  image: docker:19
  script:
    - pwd
    - ls -ltra ./dist/
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
#    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - cp ./docker/Dockerfile ./
#    - docker build --no-cache -t adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}  .
#    - docker push adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
#    - docker rmi adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
    - docker build --no-cache -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER} .
    - docker push                ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
    - docker rmi                 ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
  only:
   - staging
   - /^staging_[0-9]+(?:.[0-9]+)+$/

build_docker_image-prod:
  stage: docker
  image: docker:19
  script:
    - pwd
    - ls -ltra ./dist/
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
#    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - cp ./docker/Dockerfile ./
#    - docker build --no-cache -t adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}  .
#    - docker push adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
#    - docker rmi adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
    - docker build --no-cache -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER} .
    - docker push                ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
    - docker rmi                 ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}
  only:
   - master
   - /^v[0-9]+(?:.[0-9]+)+$/

deploy-to-swarm-develop:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://staging-manager-01-nyc3.adzapsrv.com:2375
    backend: cmp_develop-ui
    HOST: develop-cmp.adzpier.com
    SERVICE_MIN_REPLICAS: 2
  image: docker:19
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
    - docker stack deploy --with-registry-auth --compose-file=docker-stack-out.yaml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME}
  before_script:
    - export CAL_VER=$(date +"%y%m%d%H")
    - apk add gettext
    - envsubst < docker-compose.yaml > docker-stack-out.yaml
  only:
   - develop
   - /^develop_[0-9]+(?:.[0-9]+)+$/
    
deploy-to-swarm-staging:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://staging-manager-01-nyc3.adzapsrv.com:2375
#    SERVICE_NAME: ui
#    DOCKER_IMG1: "adzapier/${CI_PROJECT_TITLE}:${CI_COMMIT_TAG:-$CI_COMMIT_REF_NAME-$CAL_VER}"
    backend: cmp-ui
    HOST: staging-cmp.adzpier.com
    SERVICE_MIN_REPLICAS: 2
  image: docker:19
  script:
    # - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    # - docker stack deploy --with-registry-auth --compose-file=docker-stack-compose.yml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}-${SERVICE_NAME}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
    - docker stack deploy --with-registry-auth --compose-file=docker-stack-out.yaml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}
  before_script:
    - export CAL_VER=$(date +"%y%m%d%H")
#    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - apk add gettext
    - envsubst < docker-compose.yaml > docker-stack-out.yaml
    # - SERVICE_MIN_REPLICAS=`echo "$SERVICE_MIN_REPLICAS * 2" | bc` && docker service scale ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}=${SERVICE_MIN_REPLICAS}
  environment:
    name: master
    url: http://${CI_BUILD_REF_NAME}.example.com
  only:
    - staging
    - /^staging_[0-9]+(?:.[0-9]+)+$/

deploy-to-swarm-prod:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://production-manager-01-nyc3.adzapsrv.com:2375
#    SERVICE_NAME: ui
    backend: cmp-ui
    HOST: cmp.adzpier.com
  image: docker:19
  script:
#    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
#    - docker stack deploy --with-registry-auth --compose-file=docker-stack-compose.yml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}-${SERVICE_NAME}
#    - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD ${CI_REGISTRY}
    - envsubst < docker-compose.yaml > docker-compose-out.yaml
    - docker stack deploy --prune --with-registry-auth --compose-file=docker-stack-out.yaml ${CI_PROJECT_NAMESPACE}-${CI_PROJECT_NAME}
  before_script:
    - apk add gettext
    - export CAL_VER=$(date +"%y%m%d%H")
  environment:
    name: master
    url: http://${CI_BUILD_REF_NAME}.adzpier.com
  only:
    - master
    - /^v[0-9]+(?:.[0-9]+)+$/
  
